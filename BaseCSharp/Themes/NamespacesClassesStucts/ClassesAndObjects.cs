namespace BaseCSharp.Themes.NamespacesClassesStucts;

public class ClassesAndObjects
{
    class Example // определение нового типа - класса
    {
        // тело класса - тут все поля свойства и методы
    }

    class Example2; // С C# 12 - пустые классы можно без скобок (например абстрактные классы без методов и свойств)

    class ExamplePerson
    {
        // Поля класса
        public string Name = "Дима";
        public byte Age;
        
        // Конструктор по умолчанию скрыт, но он есть
        // Можно его определить явно
        public ExamplePerson() // то же самое просто указан явно
        {
            // Тут можно выполнить действия перед созданием экземпляра класса
            Console.WriteLine("Будет лог перед созданием объекта класса");
        }

        // Методы класса
        public void PrintInfo()
        {
            Console.WriteLine($"Имя: {Name}, Возраст: {Age}");
        }
    }
    
    public void Run()
    {
        // класс - общее описание объекта (имя фамилия возраст) - своего рода чертеж
        // экземпляр класса - сам объект с конкретными характеристиками (Дима Захаров 28 лет) - конкретное воплощение
        // класс - это пользовательски тип данных

        // создание объекта класса
        ExamplePerson person1 = new ExamplePerson(); // создание объекта класса:
        // выделили память для объекта (в куче) и записали ссылку (не сам объект в отличии от примитивов) в переменную person1
        // у каждого класса есть хотя бы 1 конструктор даже если он не описан явно - он есть под капотом
        // те после оператора new который выделяет память мы вызываем один из конструкторов (по умолчанию или другие его перегрузки если есть)
        person1.PrintInfo(); // вызов метода принт у объекта person1

        var name = person1.Name; // обращение к свойствам полям и методам через точечную нотацию
        
        // для каждого класса обычно используется отдельный файл (модуль) с расширением .cs
    }
}